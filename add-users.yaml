trigger: none

variables:
  acc: 'Arroyo_Challenge-Test_Maximiliano'

pool:
  vmImage: 'windows-latest'

# steps:
# - task: PowerShell@2
#   inputs:
#     azureSubscription: '$(acc)'
#     ScriptType: 'InlineScript'
#     script: |
#       Connect-AzAccount
#       $resourceGroupName = "ADO"
#       $keyVaultName = "MaxiPruebaTecKeyVault"
#       $keyVault = Get-AzKeyVault -VaultName $keyVaultName -ResourceGroupName $resourceGroupName
#       $permissions = @("get", "set", "list", "delete")
#       $username1 = "fabio.rincon@arroyoconsulting.net"
#       $username2 = "andres.zapata@arroyoconsulting.net"

#       $userObjectId1 = (Get-AzADUser -UserPrincipalName $username1).Id
#       $userObjectId2 = (Get-AzADUser -UserPrincipalName $username2).Id
      
#       # Create access
#       $accessPolicy1 = Set-AzKeyVaultAccessPolicy -VaultName $keyVaultName -ResourceGroupName $resourceGroupName -ObjectId $userObjectId1 -PermissionsToSecrets $permissions
#       $accessPolicy2 = Set-AzKeyVaultAccessPolicy -VaultName $keyVaultName -ResourceGroupName $resourceGroupName -ObjectId $userObjectId2 -PermissionsToSecrets $permissions

#       # Display the access policy
#       $accessPolicy1
#       $accessPolicy2
      
- task: AzurePowerShell@5
  inputs:
    azureSubscription: '$(acc)'
    azurePowerShellVersion: LatestVersion
    ScriptType: 'InlineScript'
    Inline: |
      # You can write your azure powershell scripts inline here. 
      # You can also pass predefined and custom variables to this script using arguments
      Write-Host 'Hello'
      Write-Host 'World!'
